/** * Created by admin on 2017/4/29. */import * as types from './../mutaionTypes';const state = {  count: 0};const actions = {  increment ({commit}) {    return new Promise((resolve, reject) => {      setTimeout(() => {        commit(types.ADDDUBLE);        resolve();      }, 1000);    });  },  decrement ({commit}) {    commit(types.MINUSDUBLE);  },  asyncAction ({dispatch, commit}) {  // 异步的操作方法一：    return dispatch('increment').then(() => commit(types.ASYNCACTION));  }  // async asyncAction ({dispatch, commit}) { // 异步的操作方法二：  //   await dispatch('increment')  // dispatch 发送的是一个方法名，commit提交的是一个type类型  //     .then(() => commit(types.ASYNCACTION));  // }};const mutations = {  [types.ADDDUBLE] (state) {    state.count = state.count + 3;  },  [types.MINUSDUBLE] (state) {    state.count = state.count - 3;  },  [types.ASYNCACTION] (state) {    state.count = state.count + 10;  }};export default {  state,  actions,  mutations};