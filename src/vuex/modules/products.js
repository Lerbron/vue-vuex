/** * Created by admin on 2017/4/29. */import shop from '@/api/shop';import * as types from './../mutaionTypes';const state = {  all: [] // 初始组件state数据状态};const getters = {  allProducts: state => state.all // 定义getters方法，获取state数据，并进行操作};const actions = { // 定义actions函数方法  getAllProducts ({commit}) {    shop.getProducts(products => {      commit(types.RECEIVE_PRODUCTS, {products}); // 提交一个mutation，每一个commit函数，需要提交一个type类型参数，其他参数作为载荷，通知更改state数据状态    });  }};const mutations = { // 分别定义相应的mutation函数  [types.RECEIVE_PRODUCTS] (state, {products}) {  // 每一个mutation函数第一个参数为组件state，额外的为载荷    state.all = products;  },  [types.ADD_TO_CART] (state, {id}) {    state.all.find(p => p.id === id).inventory--;  }};export default {  // 组合成module，并导出  state,  getters,  actions,  mutations};